async function processfile(file) {

    if (!(/image/i).test(file.type)) {
        alert("File " + file.name + " is not an image.");
        return false;
    } else {
        let result = new Promise((resolve, reject)=>{
            // read the files
            let reader = new FileReader();
            reader.readAsArrayBuffer(file);
        
            reader.onload = function (event) {
                // blob stuff
                let blob = new Blob([event.target.result]); // create blob...
                window.URL = window.URL || window.webkitURL;
                let blobURL = window.URL.createObjectURL(blob); // and get it's URL
        
                // helper Image object
                let image = new Image();
                image.src = blobURL;
                //preview.appendChild(image); // preview commented out, I am using the canvas instead
                image.onload = function () {
                    // have to wait till it's loaded
                    let resized = resizeMe(image); // send it to canvas
                    // let newinput = document.createElement("input");
                    // newinput.type = 'file';
                    // newinput.name = 'images[]';
                    // newinput.value = resized; // put result from canvas into new hidden input
                    resolve({
                        name: file.name,
                        type: file.type,
                        size: file.size,
                        data: resized
                    });
                }
            };
        });

        // console.log(result);
        return result;
    }
}


// === RESIZE ====
function resizeMe(img) {

    let canvas = document.createElement('canvas');

    let width = img.width;
    let height = img.height;

    let max_width = (50 / 100) * width;
    let max_height = (50 / 100) * height;

    // calculate the width and height, constraining the proportions
    if (width > height) {
        if (width > max_width) {
            //height *= max_width / width;
            height = Math.round(height *= max_width / width);
            width = max_width;
        }
    } else {
        if (height > max_height) {
            //width *= max_height / height;
            width = Math.round(width *= max_height / height);
            height = max_height;
        }
    }

    // resize the canvas and draw the image data into it
    canvas.width = width;
    canvas.height = height;
    let ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0, width, height);

    //preview.appendChild(canvas); // do the actual resized preview

    return canvas.toDataURL("image/jpeg", 0.7); // get the data from canvas as 70% JPG (can be also PNG, etc.)

}